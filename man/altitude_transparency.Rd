% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/altitude_transparency.R
\name{altitude_transparency}
\alias{altitude_transparency}
\title{Turns overlay images transparent based on altitude. Can be used to create an image overlay that will only apply to valleys, or only to hills.}
\usage{
altitude_transparency(overlay_image, altitude_raster, alpha_max = 0.4,
  alpha_min = 0, pct_alt_low = 0.05, pct_alt_high = 0.25)
}
\arguments{
\item{alpha_max}{Transparency required at higher altitudes}

\item{alpha_min}{Transparency required at lower altitudes}

\item{pct_alt_low}{The percent of maximum altitude contained in altitude_raster at which alpha_max will apply}

\item{pct_alt_high}{The percent of maximum altitude contained in altitude_raster at which alpha_min will apply}
}
\value{
An image with transparency defined by altitude
}
\description{
Turns overlay images transparent based on altitude. Can be used to create an image overlay that will only apply to valleys, or only to hills.
}
\examples{
# altitude_transparency defaults to making hills transparent. Flip alpha_max and alpha_min values to reverse it.
# Transparency in the range between pct_alt_low and pct_alt_high will smoothly transition between alpha_max and alpha_min.

#Making hills transparent
ggmap_overlay <- ggmap_image(example_raster, use_bbox = FALSE, zoom = 10, source = "google", maptype = "satellite")
ggmap_overlay_transparent_hills <- altitude_transparency(ggmap_overlay, example_raster, alpha_max = 0.8, alpha_min = 0, pct_alt_low = 0.05, pct_alt_high = 0.25)

# To make valleys transparent, flip alpha_max and alpha_min
ggmap_overlay_transparent_valleys <- altitude_transparency(ggmap_overlay, example_raster, alpha_max = 0, alpha_min = 0.8, pct_alt_low = 0.05, pct_alt_high = 0.25)
}
